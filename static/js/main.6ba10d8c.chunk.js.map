{"version":3,"sources":["components/presentations/AboutCard.tsx","components/presentations/Header.tsx","components/presentations/JokeCard.tsx","components/presentations/FilterButton.tsx","components/presentations/DirectedButton.tsx","components/presentations/JokeWindow.tsx","components/containers/ContainerJokeWindow.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","root","minWidth","textAlign","title","fontSize","pos","marginBottom","AboutCard","classes","Card","className","CardContent","Typography","color","gutterBottom","variant","component","href","target","rel","theme","createStyles","backdrop","zIndex","drawer","Header","useState","openBackdrop","setOpenBackdrop","Provider","value","onClick","Backdrop","open","JokeCard","props","joke","loading","reveal","setReveal","useEffect","console","log","CircularProgress","isFlipped","setup","punchline","styledButton","background","borderRadius","border","height","padding","marginTop","fontWeight","styledMenuItem","backgroundColor","FilterButton","currentType","changeCurrentType","anchorEl","setAnchorEl","handleClose","handleChangeType","oldType","newType","jokeType","charAt","toUpperCase","slice","Button","aria-controls","aria-haspopup","event","currentTarget","Menu","id","keepMounted","Boolean","onClose","MenuItem","selected","DirectedButton","direction","pickJoke","JokeWindow","allJokes","currentPos","Grid","container","item","ContainerJokeWindow","state","loadTenJokes","urlString","fetch","then","response","json","tenJokes","setState","length","this","React","Component","App","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6ba10d8c.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    textAlign: \"left\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function AboutCard() {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          About this website\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          Random Jokes\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          by Harry Pham\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          A small and fun website created during COVID-19 self-isolation period.\n          <br />\n          Built with React and TypeScript, the jokes themselves are fetched from {\" \"}\n          <br/>\n          <a href=\"https://github.com/15Dkatz/official_joke_api\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Official Joke API\n          </a>\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}","import React, {useState} from 'react';\nimport { IconContext } from \"react-icons\";\nimport { AiFillGithub, AiFillLinkedin, AiFillInfoCircle } from \"react-icons/ai\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nimport './styles/Header.css';\nimport AboutCard from './AboutCard';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n    },\n  }),\n);\n\nexport default function Header(){\n\tconst classes = useStyles();\n\tconst [openBackdrop, setOpenBackdrop] = useState(false);\n\n\treturn (\n    \t<header className=\"Header\">\n\t\t\t<IconContext.Provider value={{ color: \"black\" }}>\n\t\t\t\t<div className=\"HeaderIconSection\">\n\t\t\t\t\t<a href=\"#\">\n\t\t\t\t\t\t<AiFillInfoCircle onClick={() => setOpenBackdrop(true)}/>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</IconContext.Provider>\n\t\t\t<Backdrop \n\t\t\t\tclassName={classes.backdrop} \n\t\t\t\topen={openBackdrop} \n\t\t\t\tonClick={() => setOpenBackdrop(false)}\n\t\t\t>\n\t\t\t\t<AboutCard />\n    \t\t</Backdrop>\n\t\t\t<a className=\"App-link\" href=\"/\" rel=\"noopener noreferrer\">\n\t\t\t\tRandom Jokes\n\t\t\t</a>\n\t\t\t<IconContext.Provider value={{ color: \"black\" }}>\n\t\t\t\t<div className=\"HeaderIconSection\">\n\t\t\t\t\t<a href=\"https://github.com/amadeuspham/randomjokes/\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t<AiFillGithub />\n\t\t\t\t\t</a>\n\t\t\t\t\t<a href=\"https://www.linkedin.com/in/amadeuspham/\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t<AiFillLinkedin />\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</IconContext.Provider>\n    \t</header>\n\t);\n}","import React, {useState, useEffect} from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ReactCardFlip from 'react-card-flip';\n\nimport './styles/JokeCard.css';\nimport {Joke} from '../containers/ContainerJokeWindow';\n\ninterface JokeCardProps {\n\tjoke: Joke;\n\tloading: boolean;\n}\n\nexport default function JokeCard(props: JokeCardProps) {\n\tconst {joke, loading}:JokeCardProps = props;\n\tconst [reveal, setReveal] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (reveal) setReveal(!reveal);\n\t}, [joke]);\n\n\tif (loading) {\n\t\tconsole.log(\"load\")\n\t\treturn (\n\t\t\t<div className=\"JokeCard\">\n\t\t\t\t<CircularProgress/>\n\t\t\t</div>\n\t\t)\n\t}\n\n\treturn (\n\t\t<ReactCardFlip isFlipped={reveal}>\n\t\t\t<div className=\"JokeCard\" onClick={() => setReveal(!reveal)}>\n\t\t\t\t<p>{joke.setup}</p>\n\t\t\t</div>\n\n\t\t\t{reveal \n\t\t\t\t?\t<div className=\"JokeCard JokeCardReveal\" onClick={() => setReveal(!reveal)}>\n\t\t\t\t\t\t<p>{joke.punchline}</p>\n\t\t\t\t\t</div>\n\t\t\t\t:\t<div className=\"JokeCard JokeCardReveal\"/>\n\t\t\t}\n\t\t</ReactCardFlip>\n\t);\n}","import React, {useState} from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\n\ninterface FilterButtonProps {\n\tcurrentType: string;\n\tchangeCurrentType: (newType: string) => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\tstyledButton: {\n\t\t    background: \"#FFEE88\",\n\t\t    '&:hover': {\n\t\t      background: \"#e3d26f\",\n\t\t    },\n\t\t    borderRadius: 20,\n\t\t    border: 0,\n\t\t    color: '#64236e',\n\t\t    height: 40,\n\t\t    padding: '0 30px',\n\t\t    marginTop: '30px',\n\t\t    fontWeight: 'bold',\n\t\t},\n\t\tstyledMenuItem: {\n\t\t\t'&:focus': {\n\t\t\t\tbackgroundColor: \"#FFEE88\",\n\t\t\t\tcolor: \"black\",\n\t\t\t\t'&:hover': {\n\t\t\t\t\tbackgroundColor: \"#e3d26f\",\n\t\t\t\t\tcolor: \"black\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t}),\n);\n\nexport default function FilterButton(props: FilterButtonProps) {\n\tconst {currentType, changeCurrentType}: FilterButtonProps = props;\n\tconst [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\tconst classes = useStyles();\n\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\tconst handleChangeType = (oldType:string, newType: string) => {\n\t\tif (oldType !== newType) {\n\t\t\tchangeCurrentType(newType);\n\t\t}\n\t\thandleClose();\n\t}\n\n\tconst jokeType = currentType.charAt(0).toUpperCase() + currentType.slice(1) + \" jokes\";\n\n\treturn (\n\t\t<div>\n\t\t\t<Button \n\t\t\t\taria-controls=\"joke-filter-menu\" \n\t\t\t\taria-haspopup=\"true\" \n\t\t\t\tonClick={handleClick}\n\t\t\t\tclassName={classes.styledButton}\n\t\t\t>\n\t\t\t\t{jokeType}\n\t\t\t</Button>\n\t\t\t<Menu\n\t\t\t\tid=\"joke-filter-menu\"\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tkeepMounted\n\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\tonClose={handleClose}\n\t\t\t>\n\t\t\t\t<MenuItem \n\t\t\t\t\tclassName={classes.styledMenuItem}\n\t\t\t\t\tonClick={() => handleChangeType(currentType, \"all\")} \n\t\t\t\t\tselected={currentType === \"all\"}\n\t\t\t\t>\n\t\t\t\t\tAll jokes\n\t\t\t\t</MenuItem>\n\t\t\t\t<MenuItem \n\t\t\t\t\tclassName={classes.styledMenuItem}\n\t\t\t\t\tonClick={() => handleChangeType(currentType, \"general\")} \n\t\t\t\t\tselected={currentType === \"general\"}\n\t\t\t\t>\n\t\t\t\t\tGeneral jokes\n\t\t\t\t</MenuItem>\n\t\t\t\t<MenuItem \n\t\t\t\t\tclassName={classes.styledMenuItem}\n\t\t\t\t\tonClick={() => handleChangeType(currentType, \"programming\")} \n\t\t\t\t\tselected={currentType === \"programming\"}\n\t\t\t\t>\n\t\t\t\t\tProgramming jokes\n\t\t\t\t</MenuItem>\n\t\t\t</Menu>\n\t\t</div>\n\t)\n}","import React from 'react';\nimport { IoIosArrowUp, IoIosArrowDown } from \"react-icons/io\";\n\nimport './styles/DirectedButton.css';\n\ninterface DirectedButtonProps {\n\tdirection: string;\n\tpickJoke: (direction: string) => void;\n}\n\nexport default function DirectedButton(props: DirectedButtonProps){\n\tconst {direction, pickJoke}: DirectedButtonProps = props;\n\n\tif (direction === 'back') {\n\t\treturn (\n\t\t\t<div className=\"DirectedButton\" onClick={() => pickJoke(\"back\")}>\n\t\t\t\t<IoIosArrowUp className=\"DirectionIcon\"/>\n\t\t\t</div>\t\n\t\t)\n\t}\n\n\treturn (\n\t\t<div className=\"DirectedButton\" onClick={() => pickJoke(\"forward\")}>\n\t\t\t<IoIosArrowDown className=\"DirectionIcon\"/>\n\t\t</div>\t\n\t)\n\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport './styles/JokeWindow.css';\nimport {Joke} from '../containers/ContainerJokeWindow';\nimport JokeCard from './JokeCard';\nimport FilterButton from './FilterButton';\nimport DirectedButton from './DirectedButton';\n\ninterface JokeWindowProps {\n\tallJokes: Array<Joke>;\n\tcurrentPos: number;\n\tloading: boolean;\n\tpickJoke: (direction: string) => void;\n\tcurrentType: string;\n\tchangeCurrentType: (newType: string) => void;\n}\n\nexport default function JokeWindow(props: JokeWindowProps) {\n\tconst {allJokes, currentPos, loading, pickJoke, currentType, changeCurrentType}:JokeWindowProps = props;\n\n\tconst joke: Joke = allJokes[currentPos];\n\n\treturn (\n\t\t<div className=\"JokeWindow\">\n\t\t\t<Grid container className=\"JokeWindowMain\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<DirectedButton direction=\"back\" pickJoke={pickJoke}/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<JokeCard joke={joke} loading={loading}/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<DirectedButton direction=\"forward\" pickJoke={pickJoke}/>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<FilterButton currentType={currentType} changeCurrentType={changeCurrentType}/>\n\t\t</div>\n\t)\n}","import React from 'react';\nimport JokeWindow from '../presentations/JokeWindow';\n\nexport interface Joke {\n\tid: number;\n\ttype: string;\n\tsetup: string;\n\tpunchline: string;\n}\n\ninterface JokeWindowState {\n\tallJokes: Array<Joke>;\n\tloading: boolean;\n\tcurrentPos: number,\n\tcurrentType: string,\n}\n\nexport default class ContainerJokeWindow extends React.Component {\n\tstate: JokeWindowState = {\n\t\tallJokes: [],\n\t\tloading: true,\n\t\tcurrentPos: 0,\n\t\tcurrentType: \"all\",\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.loadTenJokes();\n\t}\n\n\tloadTenJokes = (direction: string = \"forward\") => {\n\t\tconst {allJokes, currentType}: JokeWindowState = this.state;\n\t\tlet urlString: string = \"https://official-joke-api.appspot.com/random_ten\";\n\n\t\tif (currentType === \"general\") {\n\t\t\turlString = \"https://official-joke-api.appspot.com/jokes/general/ten\";\n\t\t} else if (currentType === \"programming\") {\n\t\t\turlString = \"https://official-joke-api.appspot.com/jokes/programming/ten\";\n\t\t}\n\n\t\tfetch(urlString)\n\t    .then(response => response.json())\n\t    .then(tenJokes => {\n\t    \tif (direction === \"forward\") {\n\t\t\t\tthis.setState({\n\t\t\t\t\tallJokes: [...allJokes, ...tenJokes],\n\t\t\t\t\tloading: false,\n\t\t\t\t})\n\t    \t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\tallJokes: [...tenJokes, ...allJokes],\n\t\t\t\t\tloading: false,\n\t\t\t\t})\n\t    \t}\n\t    });\n\t}\n\n\tpickJoke = (direction: string) => {\n\t\tconst {currentPos, allJokes}: JokeWindowState = this.state;\n\t\tif (direction === \"back\") {\n\t\t\tif (currentPos === 0) {\n\t\t\t\tthis.setState({loading: true}, () => this.loadTenJokes(direction));\n\t\t\t\tthis.setState({currentPos: 9})\n\t\t\t} else {\n\t\t\t\tthis.setState({currentPos: currentPos - 1});\n\t\t\t}\n\t\t} else if (direction === \"forward\") {\n\t\t\tif (currentPos === allJokes.length - 2) {\n\t\t\t\tthis.setState({loading: true}, () => this.loadTenJokes(direction));\n\t\t\t}\n\t\t\tthis.setState({currentPos: currentPos + 1});\n\t\t}\n\t}\n\n\tchangeCurrentType = (newType: string) => {\n\t\tthis.setState(\n\t\t\t{allJokes: [], loading: true, currentPos: 0, currentType: newType}, \n\t\t\t() => this.loadTenJokes());\n\t}\n\n\trender() {\n\t\tconst {allJokes, loading, currentPos, currentType}:JokeWindowState = this.state;\n\n\t\treturn (\n\t\t\t<JokeWindow \n\t\t\t\tallJokes={allJokes} \n\t\t\t\tcurrentPos={currentPos}\n\t\t\t\tloading={loading} \n\t\t\t\tpickJoke={this.pickJoke}\n\t\t\t\tcurrentType={currentType}\n\t\t\t\tchangeCurrentType={this.changeCurrentType}\n\t\t\t/>\n\t\t);\n\t}\n}","import React from 'react';\n\nimport './App.css';\nimport Header from './components/presentations/Header';\nimport ContainerJokeWindow from './components/containers/ContainerJokeWindow';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    \t<Header/>\n\t\t<ContainerJokeWindow/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}