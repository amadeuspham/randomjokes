{"version":3,"sources":["components/presentations/AboutCard.tsx","components/presentations/Header.tsx","components/presentations/JokeCard.tsx","components/presentations/FilterButton.tsx","components/presentations/JokeWindow.tsx","components/containers/ContainerJokeWindow.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","root","minWidth","textAlign","title","fontSize","pos","marginBottom","AboutCard","classes","Card","className","data-testid","CardContent","Typography","color","gutterBottom","variant","component","href","target","rel","theme","createStyles","backdrop","zIndex","drawer","Header","useState","openBackdrop","setOpenBackdrop","Provider","value","aria-label","aria-pressed","role","tabIndex","onClick","onKeyDown","event","keyCode","Backdrop","open","JokeCard","props","joke","loading","reveal","setReveal","CircularProgress","isFlipped","setup","punchline","styledButton","background","borderRadius","border","height","padding","marginTop","fontWeight","styledMenuItem","backgroundColor","FilterButton","currentType","changeCurrentType","anchorEl","setAnchorEl","handleClose","handleChangeType","oldType","newType","jokeType","charAt","toUpperCase","slice","Button","aria-controls","aria-haspopup","currentTarget","Menu","id","keepMounted","Boolean","onClose","MenuItem","selected","JokeWindow","allJokes","currentPos","pickJoke","changeJoke","direction","Grid","container","item","ContainerJokeWindow","state","loadTenJokes","a","urlString","axios","get","response","tenJokes","data","setState","length","this","React","Component","App","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2080b3f8.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    textAlign: \"left\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function AboutCard() {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root} data-testid=\"about-card\">\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          About this website\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          Random Jokes\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          by Harry Pham\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          A small and fun website created during COVID-19 self-isolation period.\n          <br />\n          Built with React and TypeScript, the jokes themselves are fetched from {\" \"}\n          <br/>\n          <a href=\"https://github.com/15Dkatz/official_joke_api\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Official Joke API\n          </a>\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}","import React, {useState} from 'react';\nimport { IconContext } from \"react-icons\";\nimport { AiFillGithub, AiFillLinkedin, AiFillInfoCircle } from \"react-icons/ai\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nimport './styles/Header.css';\nimport AboutCard from './AboutCard';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n    },\n  }),\n);\n\nexport default function Header(){\n\tconst classes = useStyles();\n\tconst [openBackdrop, setOpenBackdrop] = useState(false);\n\n\treturn (\n    \t<header className=\"Header\">\n\t\t\t\t<IconContext.Provider value={{ color: \"black\" }}>\n\t\t\t\t\t<div className=\"HeaderIconSection\">\n\t\t\t\t\t\t<div aria-label=\"Info about this website\" aria-pressed=\"false\" role='button' className=\"HeaderIcon\">\n\t\t\t\t\t\t\t<AiFillInfoCircle \n\t\t\t\t\t\t\t\tdata-testid=\"info-icon\" \n\t\t\t\t\t\t\t\ttabIndex={0} \n\t\t\t\t\t\t\t\tonClick={() => setOpenBackdrop(!openBackdrop)}\n\t\t\t\t\t\t\t\tonKeyDown={event => {return event.keyCode !== 13 || setOpenBackdrop(!openBackdrop)}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</IconContext.Provider>\n\t\t\t\t<Backdrop \n\t\t\t\t\tclassName={classes.backdrop} \n\t\t\t\t\topen={openBackdrop} \n\t\t\t\t\tonClick={() => setOpenBackdrop(false)}\n\t\t\t\t>\n\t\t\t\t\t<AboutCard />\n\t    \t</Backdrop>\n\t\t\t\t<a className=\"App-link\" href=\"/randomjokes\" rel=\"noopener noreferrer\">\n\t\t\t\t\tRandom Jokes\n\t\t\t\t</a>\n\t\t\t\t<IconContext.Provider value={{ color: \"black\" }}>\n\t\t\t\t\t<div className=\"HeaderIconSection\">\n\t\t\t\t\t\t<a \n\t\t\t\t\t\t\taria-label=\"Visit Github repo of this website\" \n\t\t\t\t\t\t\trole='button'\n\t\t\t\t\t\t\thref=\"https://github.com/amadeuspham/randomjokes/\" \n\t\t\t\t\t\t\ttarget=\"_blank\" \n\t\t\t\t\t\t\trel=\"noopener noreferrer\" \n\t\t\t\t\t\t\tdata-testid=\"github-icon\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<AiFillGithub />\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a \n\t\t\t\t\t\t\taria-label=\"Visit author's LinkedIn profile\" \n\t\t\t\t\t\t\trole='button'\n\t\t\t\t\t\t\thref=\"https://www.linkedin.com/in/amadeuspham/\" \n\t\t\t\t\t\t\ttarget=\"_blank\" \n\t\t\t\t\t\t\trel=\"noopener noreferrer\"  \n\t\t\t\t\t\t\tdata-testid=\"linkedin-icon\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<AiFillLinkedin />\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</IconContext.Provider>\n    \t</header>\n\t);\n}","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ReactCardFlip from 'react-card-flip';\n\nimport './styles/JokeCard.css';\nimport {Joke} from '../containers/ContainerJokeWindow';\n\ninterface JokeCardProps {\n\tjoke: Joke;\n\tloading: boolean;\n\treveal: boolean;\n\tsetReveal: (reveal: boolean) => void;\n}\n\nexport default function JokeCard(props: JokeCardProps) {\n\tconst {joke, loading, reveal, setReveal}:JokeCardProps = props;\n\n\tif (loading) {\n\t\treturn (\n\t\t\t<div data-testid=\"joke-card-loading\" className=\"JokeCard\">\n\t\t\t\t<CircularProgress/>\n\t\t\t</div>\n\t\t)\n\t}\n\n\treturn (\n\t\t<ReactCardFlip isFlipped={reveal}>\n\t\t\t<div \n\t\t\t\tdata-testid=\"joke-card-setup\" \n\t\t\t\trole=\"button\" \n\t\t\t\taria-label=\"Joke setup\" \n\t\t\t\ttabIndex={0}\n\t\t\t\tclassName=\"JokeCard\" \n\t\t\t\tonClick={() => setReveal(!reveal)}\n\t\t\t\tonKeyDown={event => {return event.keyCode !== 13 || setReveal(!reveal)}}\n\t\t\t>\n\t\t\t\t<p>{joke.setup}</p>\n\t\t\t</div>\n\n\t\t\t{reveal \n\t\t\t\t?\t<div \n\t\t\t\t\t\tdata-testid=\"joke-card-punchline\" \n\t\t\t\t\t\tclassName=\"JokeCard JokeCardReveal\" \n\t\t\t\t\t\trole=\"button\"\n\t\t\t\t\t\taria-label=\"Joke punchline\" \n\t\t\t\t\t\ttabIndex={0}\n\t\t\t\t\t\tonClick={() => setReveal(!reveal)}\n\t\t\t\t\t\tonKeyDown={event => {return event.keyCode !== 13 || setReveal(!reveal)}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<p>{joke.punchline}</p>\n\t\t\t\t\t</div>\n\t\t\t\t:\t<div \n\t\t\t\t\t\tdata-testid=\"joke-card-punchline\" \n\t\t\t\t\t\tclassName=\"JokeCard JokeCardReveal\"\n\t\t\t\t\t/>\n\t\t\t}\n\t\t</ReactCardFlip>\n\t);\n}","import React, {useState} from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\n\ninterface FilterButtonProps {\n\tcurrentType: string;\n\tchangeCurrentType: (newType: string) => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\tstyledButton: {\n\t\t    background: \"#FFEE88\",\n\t\t    '&:hover': {\n\t\t      background: \"#e3d26f\",\n\t\t    },\n\t\t    borderRadius: 20,\n\t\t    border: 0,\n\t\t    color: '#64236e',\n\t\t    height: 40,\n\t\t    padding: '0 30px',\n\t\t    marginTop: '30px',\n\t\t    fontWeight: 'bold',\n\t\t},\n\t\tstyledMenuItem: {\n\t\t\t'&:focus': {\n\t\t\t\tbackgroundColor: \"#FFEE88\",\n\t\t\t\tcolor: \"black\",\n\t\t\t\t'&:hover': {\n\t\t\t\t\tbackgroundColor: \"#e3d26f\",\n\t\t\t\t\tcolor: \"black\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t}),\n);\n\nexport default function FilterButton(props: FilterButtonProps) {\n\tconst {currentType, changeCurrentType}: FilterButtonProps = props;\n\tconst [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\tconst classes = useStyles();\n\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\tconst handleChangeType = (oldType:string, newType: string) => {\n\t\tif (oldType !== newType) {\n\t\t\tchangeCurrentType(newType);\n\t\t}\n\t\thandleClose();\n\t}\n\n\tconst jokeType = currentType.charAt(0).toUpperCase() + currentType.slice(1) + \" jokes\";\n\n\treturn (\n\t\t<div >\n\t\t\t<Button \n\t\t\t\tdata-testid=\"filter-button\"\n\t\t\t\taria-controls=\"joke-filter-menu\" \n\t\t\t\taria-haspopup=\"true\" \n\t\t\t\tonClick={handleClick}\n\t\t\t\tclassName={classes.styledButton}\n\t\t\t>\n\t\t\t\t{jokeType}\n\t\t\t</Button>\n\t\t\t<Menu\n\t\t\t\tid=\"joke-filter-menu\"\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tkeepMounted\n\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\tonClose={handleClose}\n\t\t\t>\n\t\t\t\t<MenuItem \n\t\t\t\t\tdata-testid=\"all-jokes-choice\"\n\t\t\t\t\tclassName={classes.styledMenuItem}\n\t\t\t\t\tonClick={() => handleChangeType(currentType, \"all\")} \n\t\t\t\t\tselected={currentType === \"all\"}\n\t\t\t\t>\n\t\t\t\t\tAll jokes\n\t\t\t\t</MenuItem>\n\t\t\t\t<MenuItem \n\t\t\t\t\tdata-testid=\"general-jokes-choice\"\n\t\t\t\t\tclassName={classes.styledMenuItem}\n\t\t\t\t\tonClick={() => handleChangeType(currentType, \"general\")} \n\t\t\t\t\tselected={currentType === \"general\"}\n\t\t\t\t>\n\t\t\t\t\tGeneral jokes\n\t\t\t\t</MenuItem>\n\t\t\t\t<MenuItem \n\t\t\t\t\tdata-testid=\"programming-jokes-choice\"\n\t\t\t\t\tclassName={classes.styledMenuItem}\n\t\t\t\t\tonClick={() => handleChangeType(currentType, \"programming\")} \n\t\t\t\t\tselected={currentType === \"programming\"}\n\t\t\t\t>\n\t\t\t\t\tProgramming jokes\n\t\t\t\t</MenuItem>\n\t\t\t</Menu>\n\t\t</div>\n\t)\n}","import React, {useState} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { IoIosArrowUp, IoIosArrowDown } from \"react-icons/io\";\n\nimport './styles/JokeWindow.css';\nimport {Joke} from '../containers/ContainerJokeWindow';\nimport JokeCard from './JokeCard';\nimport FilterButton from './FilterButton';\n\ninterface JokeWindowProps {\n\tallJokes: Array<Joke>;\n\tcurrentPos: number;\n\tloading: boolean;\n\tpickJoke: (direction: string) => void;\n\tcurrentType: string;\n\tchangeCurrentType: (newType: string) => void;\n}\n\nexport default function JokeWindow(props: JokeWindowProps) {\n\tconst {allJokes, currentPos, loading, pickJoke, currentType, changeCurrentType}:JokeWindowProps = props;\n\tconst [reveal, setReveal] = useState(false);\n\n\tconst joke: Joke = allJokes[currentPos];\n\n\tconst changeJoke = (direction: string) => {\n\t\tsetReveal(false);\n\t\tpickJoke(direction)\n\t}\n\n\treturn (\n\t\t<div className=\"JokeWindow\">\n\t\t\t<Grid container className=\"JokeWindowMain\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<div \n\t\t\t\t\t\tdata-testid=\"up-button\" \n\t\t\t\t\t\taria-label=\"Previous joke\" \n\t\t\t\t\t\ttabIndex={0}\n\t\t\t\t\t\trole='button' \n\t\t\t\t\t\tclassName=\"DirectedButton\" \n\t\t\t\t\t\tonClick={() => changeJoke(\"back\")}\n\t\t\t\t\t\tonKeyDown={event => {return event.keyCode !== 13 || changeJoke(\"back\")}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<IoIosArrowUp className=\"DirectionIcon\"/>\n\t\t\t\t\t</div>\t\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<JokeCard joke={joke} loading={loading} reveal={reveal} setReveal={setReveal}/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<div \n\t\t\t\t\t\tdata-testid=\"down-button\" \n\t\t\t\t\t\taria-label=\"Next joke\" \n\t\t\t\t\t\ttabIndex={0}\n\t\t\t\t\t\trole='button' \n\t\t\t\t\t\tclassName=\"DirectedButton\" \n\t\t\t\t\t\tonClick={() => changeJoke(\"forward\")}\n\t\t\t\t\t\tonKeyDown={event => {return event.keyCode !== 13 || changeJoke(\"forward\")}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<IoIosArrowDown className=\"DirectionIcon\"/>\n\t\t\t\t\t</div>\t\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<FilterButton currentType={currentType} changeCurrentType={changeCurrentType}/>\n\t\t</div>\n\t)\n}","import React from 'react';\nimport axios from 'axios';\n\nimport JokeWindow from '../presentations/JokeWindow';\n\nexport interface Joke {\n\tid: number;\n\ttype: string;\n\tsetup: string;\n\tpunchline: string;\n}\n\ninterface JokeWindowState {\n\tallJokes: Array<Joke>;\n\tloading: boolean;\n\tcurrentPos: number,\n\tcurrentType: string,\n}\n\nexport default class ContainerJokeWindow extends React.Component {\n\tstate: JokeWindowState = {\n\t\tallJokes: [],\n\t\tloading: true,\n\t\tcurrentPos: 0,\n\t\tcurrentType: \"all\",\n\t}\n\n\tasync componentDidMount(): Promise<void> {\n\t\tawait this.loadTenJokes();\n\t}\n\n\tloadTenJokes = async (direction: string = \"forward\") => {\n\t\tconst {allJokes, currentType}: JokeWindowState = this.state;\n\t\tlet urlString: string = \"https://official-joke-api.appspot.com/random_ten\";\n\n\t\tif (currentType === \"general\") {\n\t\t\turlString = \"https://official-joke-api.appspot.com/jokes/general/ten\";\n\t\t} else if (currentType === \"programming\") {\n\t\t\turlString = \"https://official-joke-api.appspot.com/jokes/programming/ten\";\n\t\t}\n\n\t\tconst response = await axios.get(urlString);\n\t\tconst tenJokes: Array<Joke> = response.data;\n\n  \tif (direction === \"forward\") {\n\t\t\tthis.setState({\n\t\t\t\tallJokes: [...allJokes, ...tenJokes],\n\t\t\t\tloading: false,\n\t\t\t})\n  \t} else {\n\t\t\tthis.setState({\n\t\t\t\tallJokes: [...tenJokes, ...allJokes],\n\t\t\t\tloading: false,\n\t\t\t})\n  \t}\n\t}\n\n\tpickJoke = (direction: string) => {\n\t\tconst {currentPos, allJokes}: JokeWindowState = this.state;\n\t\tif (direction === \"back\") {\n\t\t\tif (currentPos === 0) {\n\t\t\t\tthis.setState({loading: true}, () => this.loadTenJokes(direction));\n\t\t\t\tthis.setState({currentPos: 9})\n\t\t\t} else {\n\t\t\t\tthis.setState({currentPos: currentPos - 1});\n\t\t\t}\n\t\t} else if (direction === \"forward\") {\n\t\t\tif (currentPos === allJokes.length - 2) {\n\t\t\t\tthis.setState({loading: true}, () => this.loadTenJokes(direction));\n\t\t\t}\n\t\t\tthis.setState({currentPos: currentPos + 1});\n\t\t}\n\t}\n\n\tchangeCurrentType = (newType: string) => {\n\t\tthis.setState(\n\t\t\t{allJokes: [], loading: true, currentPos: 0, currentType: newType}, \n\t\t\t() => this.loadTenJokes());\n\t}\n\n\trender() {\n\t\tconst {allJokes, loading, currentPos, currentType}:JokeWindowState = this.state;\n\n\t\treturn (\n\t\t\t<JokeWindow \n\t\t\t\tallJokes={allJokes} \n\t\t\t\tcurrentPos={currentPos}\n\t\t\t\tloading={loading} \n\t\t\t\tpickJoke={this.pickJoke}\n\t\t\t\tcurrentType={currentType}\n\t\t\t\tchangeCurrentType={this.changeCurrentType}\n\t\t\t/>\n\t\t);\n\t}\n}","import React from 'react';\n\nimport './App.css';\nimport Header from './components/presentations/Header';\nimport ContainerJokeWindow from './components/containers/ContainerJokeWindow';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    \t<Header/>\n\t\t\t<ContainerJokeWindow/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}